/**
   * @license
   * author: bramblex<qjnight@gmail.com>
   * state-model.js v1.0.3
   * Released under the MIT license.
   */
var StateModel=function(t){"use strict";return t.StateModel=class{constructor(t){this.listeners=[],this.state=t}onStateChange(t){const e=(...e)=>t(...e);return this.listeners.push(e),()=>{this.listeners=this.listeners.filter((t=>t!==e))}}setState(t){const e=this.state;this.state=t,this.listeners.forEach((s=>s(t,e,this)))}},t.createModel=t=>{const e=new Set;let s;const n=()=>s,i=t=>{const n="function"==typeof t?t(s):t,i=s;s=Object.assign(Object.assign({},s),n),e.forEach((t=>t(s,i)))},r={subscribe:t=>(e.add(t),()=>{e.delete(t)}),getSnapshot:n,setState:i};return s=t(i,n,r),r},Object.defineProperty(t,"__esModule",{value:!0}),t}({});
