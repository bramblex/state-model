/**
   * @license
   * author: bramblex<qjnight@gmail.com>
   * state-model.js v0.0.1
   * Released under the MIT license.
   */
var StateModel=function(t,e){"use strict";function s(t){const s=function(){const[,t]=e.useState(0);return()=>t((t=>t+1))}();return e.useEffect((()=>t.on(s)),[t]),t}return t.StateModel=class{constructor(t){this.listeners=[],this.state=t}on(t){const e=(...e)=>t(...e);return this.listeners.push(e),()=>{this.listeners=this.listeners.filter((t=>t!==e))}}setState(t){this.state=t,this.listeners.forEach((t=>t(this)))}},t.useLocalModel=function(t,n=[]){return s(e.useMemo(t,n))},t.useModel=s,t.useModelContext=function(t){const s=t.getOwnPropertyNames("__Context__");return e.useContext(s)},t.useModelProvider=function(t){const s=t.getOwnPropertyNames("__Context__")||e.createContext(null);return t.__Context__=s,s.Provider},Object.defineProperty(t,"__esModule",{value:!0}),t}({},React);
